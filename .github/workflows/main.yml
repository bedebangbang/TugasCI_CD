name: Laravel CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  laravel_build:
    name: Laravel Build
    runs-on: ubuntu-latest

    steps:
      # Langkah-langkah untuk build Laravel
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install --no-ansi --no-interaction --no-progress --optimize-autoloader

      - name: Copy file example env
        run: cp .env.example .env

      - name: Generate key
        run: php artisan key:generate

      - name: Create File Database
        run: touch database/database.sqlite

      - name: Run Migration Database
        run: php artisan migrate:fresh --seed

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        run: npm install

      - name: Build Node.JS
        run: npm run build

  laravel_test:
    name: Laravel Test
    runs-on: ubuntu-latest
    needs: laravel_build

    steps:
      # Langkah-langkah untuk melakukan pengujian pada Laravel
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install --no-ansi --no-interaction --no-progress --optimize-autoloader

      - name: Copy file example env
        run: cp .env.example .env

      - name: Generate key
        run: php artisan key:generate

      - name: Create File Database
        run: touch database/database.sqlite

      - name: Run Migration Database
        run: php artisan migrate:fresh --seed

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        run: npm install

      - name: Build Node.JS
        run: npm run build

      - name: Run tests
        run: ./vendor/bin/phpunit

  notify:
    name: Notify via Telegram
    runs-on: ubuntu-latest
    needs: [laravel_build, laravel_test]
    steps:
      # Langkah-langkah untuk memberikan notifikasi ke Telegram
      - name: Set Job Status
        id: jobstatus
        run: echo "job_build_status=${{ needs.laravel_build.result }}" >> $GITHUB_ENV && echo "job_test_status=${{ needs.laravel_test.result }}" >> $GITHUB_ENV

      - name: Send Notification
        if: always()
        env:
          TELEGRAM_TOKEN: 6896621963:AAEPI30haMYn5T797EGtWQ_GktWaU1NF-mI
          TELEGRAM_CHAT_ID: 5520391913  # Ganti dengan chat_id Anda
        run: |
          if [[ "${{ needs.laravel_build.result }}" == "success" && "${{ needs.laravel_test.result }}" == "success" ]]; then
            STATUS="Berhasil"
            MESSAGE="üéâ Build dan Test Laravel berhasil! üéâ"
          else
            STATUS="Gagal"
            MESSAGE="‚ùå Build atau Test Laravel gagal! ‚ùå"
          fi

          # Mengirim pesan ke Telegram berdasarkan status build dan test
          curl -s -X POST https://api.telegram.org/bot6896621963:AAEPI30haMYn5T797EGtWQ_GktWaU1NF-mI/sendMessage -d chat_id=${TELEGRAM_CHAT_ID} -d text="${MESSAGE}"
